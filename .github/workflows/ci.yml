name: CI

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Semantic Version Tag for Docker image'
        required: true
        default: '1.0.0'

jobs:

  Build_and_Testing:
    runs-on: ubuntu-latest
    steps:
      # Checkout Repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      # Setup JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      # Build with Maven
      - name: Build with Maven
        run: mvn clean package

      # Upload JAR as artifact
      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar

      # Upload Coverage as artifact
      - name: Upload Coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: target/site/jacoco/jacoco.xml

  Analyse:
    needs: [Build_and_Testing]
    runs-on: ubuntu-latest
    steps:

      # Download JAR and Coverage
      - name: Download JAR
        uses: actions/download-artifact@v4
        with:
          name: app-jar

      - name: Download Coverage
        uses: actions/download-artifact@v4
        with:
          name: coverage-report

      # SonarQube scan
      - name: SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=DevOpsCalc \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.token=$SONAR_TOKEN \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
            -Dsonar.java.binaries=target/classes

      # Checkstyle Lint
      - name: Run Checkstyle
        run: mvn checkstyle:check

      # Upload Checkstyle result as artifact
      - name: Upload Checkstyle result
        uses: actions/upload-artifact@v4
        with:
          name: checkstyle-result
          path: target/checkstyle-result.xml

  Docker:
    needs: [Build_and_Testing, Analyse]
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      
      # Prepare dependencies for Docker build
      - name: Copy dependencies for Docker
        run: mvn dependency:copy-dependencies -DskipTests

      # Docker Login
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build Docker Image and push via Fabric8
      - name: Build & Push Docker image
        run: |
          echo "Using Docker tag: ${{ github.event.inputs.version }}"
          mvn io.fabric8:docker-maven-plugin:0.41.0:build \
              io.fabric8:docker-maven-plugin:0.41.0:push \
              -Ddocker.username=${{ env.DOCKER_USERNAME }} \
              -Ddocker.password=${{ env.DOCKER_PASSWORD }} \
              -Ddocker.image.tag=${{ github.event.inputs.version }} \
              -DskipTests
